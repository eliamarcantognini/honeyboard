{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/form.component.ts","./src/app/form.component.html","./src/app/honey.ts","./src/app/honeyNames.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'honeyboard';\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n  <body>\r\n    <!-- Navigation-->\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-primary fixed-top\" id=\"mainNav\">\r\n      <div class=\"container\">\r\n        <a class=\"navbar-brand js-scroll-trigger\" href=\"index.html\">HoneyBoard</a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\"\r\n        aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span\r\n        class=\"navbar-toggler-icon\"></span></button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n          <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item\"><a class=\"nav-link js-scroll-trigger\" href=\"https://www.eliamarcantognini.it\">Contatta</a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    <!-- Logo -->\r\n    <header class=\"bg-secondary-light text-white\">\r\n      <div class=\"container text-center\">\r\n        <img src=\"assets/logo.png\" alt=\"logo\" width=\"250\" />\r\n      </div>\r\n    </header>\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <h3 class=\"h3 py-5\">\r\n          Inserisci i dati per generare un'etichetta da scannerizzare con Bee2Honey!\r\n        </h3>\r\n      </div>\r\n    </div>\r\n    <info-form></info-form>\r\n\r\n\r\n\r\n      <!-- Footer-->\r\n    <footer class=\"py-5 bg-primary\">\r\n      <div class=\"container\">\r\n        <p class=\"m-0 text-center text-dark\">Elia Marcantognini &copy; HoneyBoard 2021</p>\r\n      </div>\r\n    </footer>\r\n  </body>\r\n\r\n</html>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxQRCodeModule } from '@techiediaries/ngx-qrcode';\r\nimport { NgxPrintModule } from 'ngx-print';\r\nimport { FileSaverModule } from 'ngx-filesaver';\r\nimport 'jsonpack';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormComponent } from './form.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    NgxQRCodeModule,\r\n    NgxPrintModule,\r\n    FileSaverModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\nimport { Honey } from './honey';\r\nimport { HoneyNames } from './honeyNames';\r\n\r\n@Component({\r\n  selector: 'info-form',\r\n  templateUrl: './form.component.html',\r\n})\r\nexport class FormComponent {\r\n\r\n  elementType = 'url';\r\n  value = '';\r\n  ranges = HoneyNames;\r\n  remainingText = 100;\r\n  model = new Honey('', '', '', '', '', '', '');\r\n\r\n  submitted = false;\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.newQrCode();\r\n    // this.sendEmail();\r\n  }\r\n\r\n  newQrCode() {\r\n    const token = this.getToken()\r\n    // Fare un pack del json per risparmiare spazio?\r\n    this.value = JSON.stringify({\r\n      c: token, // token di controllo del qrcode\r\n      f: this.model.nomeAzienda,\r\n      s: this.model.sito,\r\n      n: this.model.recapito,\r\n      a: this.model.indirizzo,\r\n      p: this.model.citta,\r\n      C: this.model.cap,\r\n      h: this.model.nomeMiele,\r\n      d: this.model.descMiele\r\n    });\r\n  }\r\n\r\n  // sendEmail() {\r\n    // Aggiungere un BaaS per farlo?\r\n  // }\r\n\r\n  getKeys(obj: any){\r\n    // var isValueProperty = parseInt(obj, 10) >= 0\r\n    return Object.keys(obj).map(key => obj[key]).filter(value => typeof value === 'number') as string[];\r\n  }\r\n\r\n  textChange(value) {\r\n    this.remainingText = 100 - value.length\r\n  }\r\n\r\n  getToken() {\r\n    const length = 18\r\n    let pattern = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890abcdefghijklmnopqrstuvwxyz\";\r\n    let text = \"\";\r\n    for (let i = 0; i < length; i++) {\r\n      text += pattern.charAt(Math.floor(Math.random() * pattern.length));\r\n    }\r\n      return text;\r\n  }\r\n}\r\n","  <!-- Form  -->\r\n    <form (ngSubmit)=\"onSubmit()\" #infoForm=\"ngForm\">\r\n      <!-- Email, serve un backend per utilizzarla in qualche modo. -->\r\n      <!-- <div class=\"container\">\r\n        <div class=\"row\">\r\n          <p class=\"h4\">Email</p>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12 mx-auto\">\r\n            <div class=\"form-group\">\r\n              <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"api@coltore.it\" #email=\"ngModel\" required [(ngModel)]=\"model.email\" ngControl=\"email\">\r\n              <div [hidden]=\"email.valid || email.pristine\" class=\"alert alert-danger\"> L'email è richiesta</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n      <!-- Informazioni sull'azienda -->\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <p class=\"h4\">Informazioni sull'azienda</p>\r\n        </div>\r\n        <div class=\"form-group\" id=\"infoazienda\">\r\n          <div class=\"row\">\r\n            <div class=\"col-6 mx-auto\">\r\n              <input type=\"text\" name=\"nomeazienda\" id=\"nomeazienda\" class=\"form-control\" placeholder=\"Nome azienda\" required #nomeAzienda=\"ngModel\" [(ngModel)]=\"model.nomeAzienda\" ngControl=\"nomeAzienda\"/>\r\n              <div [hidden]=\"nomeAzienda.valid || nomeAzienda.pristine\" class=\"alert alert-danger\"> Il nome dell'azienda è richiesto</div>\r\n            </div>\r\n            <div class=\"col-6 mx-auto\">\r\n              <input type=\"text\" name=\"recapito\" id=\"recapito\" class=\"form-control\" placeholder=\"Recapito telefonico\" required #recapito=\"ngModel\" [(ngModel)]=\"model.recapito\" ngControl=\"recapito\"/>\r\n              <div [hidden]=\"recapito.valid || recapito.pristine\" class=\"alert alert-danger\"> Il recapito è richiesto</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-6 mx-auto\">\r\n              <input type=\"url\" name=\"sito\" id=\"sito\" class=\"form-control\" placeholder=\"www.sitoweb.it\" [(ngModel)]=\"model.sito\" ngControl=\"sito\"/>\r\n            </div>\r\n            <div class=\"col-6 mx-auto\">\r\n              <input type=\"text\" name=\"indirizzo\" id=\"indirizzo\" class=\"form-control\" placeholder=\"Via dell'Università, 1\" required #indirizzo=\"ngModel\" [(ngModel)]=\"model.indirizzo\" ngControl=\"indirizzo\"/>\r\n              <div [hidden]=\"indirizzo.valid || indirizzo.pristine\" class=\"alert alert-danger\"> L'indirizzo è richiesto</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-6 mx-auto\">\r\n              <input type=\"text\" name=\"citta\" id=\"citta\" class=\"form-control\" placeholder=\"Cesena\" required #citta=\"ngModel\" [(ngModel)]=\"model.citta\" ngControl=\"citta\"/>\r\n              <div [hidden]=\"citta.valid || citta.pristine\" class=\"alert alert-danger\"> La città è richiesta</div>\r\n            </div>\r\n            <div class=\"col-6 mx-auto\">\r\n              <input type=\"text\" name=\"cap\" id=\"cap\" class=\"form-control\" placeholder=\"47521\" required #cap=\"ngModel\" [(ngModel)]=\"model.cap\" ngControl=\"cap\"/>\r\n              <div [hidden]=\"cap.valid || cap.pristine\" class=\"alert alert-danger\"> L'email è richiesta</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Informazioni sul miele -->\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <p class=\"h4\">Informazioni sul miele</p>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12 mx-auto\">\r\n            <div class=\"form-group\">\r\n              <div class=\"row mx-auto\">\r\n                <!-- <input type=\"text\" class=\"form-control col-12\" name=\"nomemiele\" id=\"nomemiele\" placeholder=\"Nome del miele\" required #nomeMiele=\"ngModel\" [(ngModel)]=\"model.nomeMiele\" ngControl=\"nomeMiele\"/> -->\r\n                <select placeholder=\"Seleziona il tipo di miele\" class=\"form-control col-12\" name=\"nomemiele\" id=\"nomemiele\" required #nomeMiele=\"ngModel\" [(ngModel)]=\"model.nomeMiele\" ngControl=\"nomeMiele\">\r\n                  <option value=\"\" disabled selected>Seleziona il tipo di miele</option>\r\n                  <option *ngFor=\"let range of getKeys(ranges)\" [ngValue]=\"range\"> {{ranges[range]}} </option>\r\n                </select>\r\n                <div [hidden]=\"nomeMiele.valid || nomeMiele.pristine\" class=\"alert alert-danger\"> Il nome del miele è richiesto</div>\r\n              </div>\r\n              <div class=\"row mx-auto textarea-wrapper\">\r\n                <textarea pInputTextArea class=\"form-control col-12\" name=\"descmiele\" id=\"descmiele\" rows=\"3\" placeholder=\"Una breve descrizione del miele, massimo 100 caratteri\"\r\n                  maxlength=\"100\" required #descMiele=\"ngModel\" [(ngModel)]=\"model.descMiele\" ngControl=\"descMiele\" (ngModelChange)=\"textChange(model.descMiele)\"></textarea>\r\n                <div [hidden]=\"descMiele.valid || descMiele.pristine\" class=\"alert alert-danger\"> Una breve descrizione è richiesta</div>\r\n                <span class=\"remaning\">{{remainingText}}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Submit -->\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12 mx-auto\">\r\n            <div class=\"form-group\">\r\n              <div class=\"row mx-auto\">\r\n                <input [disabled]=\"!infoForm.form.valid\" type=\"submit\" class=\"form-control bg-secondary text-white col-9\" id=\"genera\" value=\"Genera QR Code\"/>\r\n                <input type=\"reset\" class=\"form-control bg-secondary text-white col-3\" id=\"reset\" value=\"Reset\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n    <div [hidden]='!submitted' class=\"container\">\r\n      <div class=\"row mx-auto\">\r\n        <ngx-qrcode\r\n          [elementType]=\"elementType\"\r\n          [value]=\"value\"\r\n          class=\"text-center col-lg-12\"\r\n          id = \"print-section\"\r\n          errorCorrectionLevel=\"L\">\r\n        </ngx-qrcode>\r\n        <div class=\"row col-lg-12\">\r\n          <button type=\"button\" class=\"form-control bg-secondary text-white\"\r\n           printTitle=\"Bee2Honey QR Code\" printSectionId=\"print-section\" ngxPrint>Stampa</button>\r\n        </div>\r\n        <!-- <div class=\"row col-lg-12\">\r\n          <button type=\"button\" class=\"form-control bg-secondary text-white\"\r\n          >Salva</button>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n","export class Honey {\r\n  constructor(\r\n    // public email: string, // implementare la mail con un backend\r\n    public nomeAzienda: string,\r\n    public recapito: string,\r\n    public indirizzo: string,\r\n    public citta: string,\r\n    public cap: string,\r\n    public nomeMiele: string,\r\n    public descMiele: string,\r\n    public sito?: string,\r\n  ){}\r\n}\r\n","export enum HoneyNames {\r\n  Millefiori,\r\n  Castagno,\r\n  Acacia,\r\n  Eucalipto,\r\n  Girasole,\r\n  Agrumi,\r\n  Timo,\r\n  Tiglio,\r\n  Melata,\r\n  Sulla,\r\n  Altro,\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}